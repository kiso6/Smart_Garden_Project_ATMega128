
Yunus.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000bc  00800100  000004f4  00000588  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  008001bc  008001bc  00000644  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000644  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000674  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  000006b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c81  00000000  00000000  00000718  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000900  00000000  00000000  00001399  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004e5  00000000  00000000  00001c99  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e8  00000000  00000000  00002180  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a2  00000000  00000000  00002268  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001fa  00000000  00000000  0000270a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002904  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 ef       	ldi	r30, 0xF4	; 244
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 3b       	cpi	r26, 0xBC	; 188
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac eb       	ldi	r26, 0xBC	; 188
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 3c       	cpi	r26, 0xC4	; 196
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	bb d1       	rcall	.+886    	; 0x43a <main>
  c4:	15 c2       	rjmp	.+1066   	; 0x4f0 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <USART_Init>:


void USART_TX_String(char *text){
	while(*text != 0)
	USART_TX(*text++);
}
  c8:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
  cc:	89 b9       	out	0x09, r24	; 9
  ce:	88 e1       	ldi	r24, 0x18	; 24
  d0:	8a b9       	out	0x0a, r24	; 10
  d2:	86 e0       	ldi	r24, 0x06	; 6
  d4:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
  d8:	08 95       	ret

000000da <USART_Transmit>:
  da:	5d 9b       	sbis	0x0b, 5	; 11
  dc:	fe cf       	rjmp	.-4      	; 0xda <USART_Transmit>
  de:	8c b9       	out	0x0c, r24	; 12
  e0:	08 95       	ret

000000e2 <Timer_Init>:
void Timer_Init()
{
	TCCR0 = (4 << CS0);
  e2:	84 e0       	ldi	r24, 0x04	; 4
  e4:	83 bf       	out	0x33, r24	; 51
	TIMSK = (1 << TOIE0);
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	87 bf       	out	0x37, r24	; 55
	TCNT0 = 6;
  ea:	86 e0       	ldi	r24, 0x06	; 6
  ec:	82 bf       	out	0x32, r24	; 50
  ee:	08 95       	ret

000000f0 <USART_Transmit_String>:
}

void USART_Transmit_String(char *str)
{
  f0:	cf 93       	push	r28
  f2:	df 93       	push	r29
  f4:	ec 01       	movw	r28, r24
	while (*str != '\0')
  f6:	02 c0       	rjmp	.+4      	; 0xfc <USART_Transmit_String+0xc>
	USART_Transmit(*str++);
  f8:	21 96       	adiw	r28, 0x01	; 1
  fa:	ef df       	rcall	.-34     	; 0xda <USART_Transmit>
	TCNT0 = 6;
}

void USART_Transmit_String(char *str)
{
	while (*str != '\0')
  fc:	88 81       	ld	r24, Y
  fe:	81 11       	cpse	r24, r1
 100:	fb cf       	rjmp	.-10     	; 0xf8 <USART_Transmit_String+0x8>
	USART_Transmit(*str++);
}
 102:	df 91       	pop	r29
 104:	cf 91       	pop	r28
 106:	08 95       	ret

00000108 <__vector_16>:

ISR(TIMER0_OVF_vect)
{
 108:	1f 92       	push	r1
 10a:	0f 92       	push	r0
 10c:	0f b6       	in	r0, 0x3f	; 63
 10e:	0f 92       	push	r0
 110:	11 24       	eor	r1, r1
 112:	2f 93       	push	r18
 114:	8f 93       	push	r24
 116:	9f 93       	push	r25
	if(flag1 == 1)
 118:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 11c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	09 f0       	breq	.+2      	; 0x126 <__vector_16+0x1e>
 124:	47 c0       	rjmp	.+142    	; 0x1b4 <__vector_16+0xac>
	{
		msec++;
 126:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <__data_end>
 12a:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <__data_end+0x1>
 12e:	01 96       	adiw	r24, 0x01	; 1
 130:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <__data_end+0x1>
 134:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <__data_end>
		if(msec == 1000)
 138:	88 3e       	cpi	r24, 0xE8	; 232
 13a:	93 40       	sbci	r25, 0x03	; 3
 13c:	69 f4       	brne	.+26     	; 0x158 <__vector_16+0x50>
		{
			msec = 0;
 13e:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <__data_end+0x1>
 142:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <__data_end>
			sec++;
 146:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <sec>
 14a:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <sec+0x1>
 14e:	01 96       	adiw	r24, 0x01	; 1
 150:	90 93 c3 01 	sts	0x01C3, r25	; 0x8001c3 <sec+0x1>
 154:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <sec>
		}
		if(sec == 60){
 158:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <sec>
 15c:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <sec+0x1>
 160:	cc 97       	sbiw	r24, 0x3c	; 60
 162:	69 f4       	brne	.+26     	; 0x17e <__vector_16+0x76>
		sec = 0;
 164:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <sec+0x1>
 168:	10 92 c2 01 	sts	0x01C2, r1	; 0x8001c2 <sec>
		min++;
 16c:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <min>
 170:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <min+0x1>
 174:	01 96       	adiw	r24, 0x01	; 1
 176:	90 93 c1 01 	sts	0x01C1, r25	; 0x8001c1 <min+0x1>
 17a:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <min>
	    }
		if(min == 60)
 17e:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <min>
 182:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <min+0x1>
 186:	cc 97       	sbiw	r24, 0x3c	; 60
 188:	21 f4       	brne	.+8      	; 0x192 <__vector_16+0x8a>
		min = 0;
 18a:	10 92 c1 01 	sts	0x01C1, r1	; 0x8001c1 <min+0x1>
 18e:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <min>
		hour++; 
 192:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <hour>
 196:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <hour+0x1>
 19a:	01 96       	adiw	r24, 0x01	; 1
 19c:	90 93 bf 01 	sts	0x01BF, r25	; 0x8001bf <hour+0x1>
 1a0:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <hour>
		if(hour == 24)
 1a4:	48 97       	sbiw	r24, 0x18	; 24
 1a6:	21 f4       	brne	.+8      	; 0x1b0 <__vector_16+0xa8>
		hour = 0;
 1a8:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <hour+0x1>
 1ac:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <hour>
		
		TCNT0 = 6;
 1b0:	86 e0       	ldi	r24, 0x06	; 6
 1b2:	82 bf       	out	0x32, r24	; 50
	}
}
 1b4:	9f 91       	pop	r25
 1b6:	8f 91       	pop	r24
 1b8:	2f 91       	pop	r18
 1ba:	0f 90       	pop	r0
 1bc:	0f be       	out	0x3f, r0	; 63
 1be:	0f 90       	pop	r0
 1c0:	1f 90       	pop	r1
 1c2:	18 95       	reti

000001c4 <waterme>:
void waterme(int _humidity){
	
	if(_humidity <30){
 1c4:	8e 31       	cpi	r24, 0x1E	; 30
 1c6:	91 05       	cpc	r25, r1
 1c8:	0c f0       	brlt	.+2      	; 0x1cc <waterme+0x8>
 1ca:	3b c0       	rjmp	.+118    	; 0x242 <waterme+0x7e>
		USART_Transmit_String("Time \r\n");
 1cc:	82 e0       	ldi	r24, 0x02	; 2
 1ce:	91 e0       	ldi	r25, 0x01	; 1
 1d0:	8f df       	rcall	.-226    	; 0xf0 <USART_Transmit_String>
		USART_Transmit((sec+1)/10+48);
 1d2:	20 91 c2 01 	lds	r18, 0x01C2	; 0x8001c2 <sec>
 1d6:	30 91 c3 01 	lds	r19, 0x01C3	; 0x8001c3 <sec+0x1>
 1da:	2f 5f       	subi	r18, 0xFF	; 255
 1dc:	3f 4f       	sbci	r19, 0xFF	; 255
 1de:	ad ec       	ldi	r26, 0xCD	; 205
 1e0:	bc ec       	ldi	r27, 0xCC	; 204
 1e2:	63 d1       	rcall	.+710    	; 0x4aa <__umulhisi3>
 1e4:	96 95       	lsr	r25
 1e6:	87 95       	ror	r24
 1e8:	96 95       	lsr	r25
 1ea:	87 95       	ror	r24
 1ec:	96 95       	lsr	r25
 1ee:	87 95       	ror	r24
 1f0:	80 5d       	subi	r24, 0xD0	; 208
 1f2:	73 df       	rcall	.-282    	; 0xda <USART_Transmit>
		USART_Transmit((sec+1)%10+48);
 1f4:	40 91 c2 01 	lds	r20, 0x01C2	; 0x8001c2 <sec>
 1f8:	50 91 c3 01 	lds	r21, 0x01C3	; 0x8001c3 <sec+0x1>
 1fc:	4f 5f       	subi	r20, 0xFF	; 255
 1fe:	5f 4f       	sbci	r21, 0xFF	; 255
 200:	9a 01       	movw	r18, r20
 202:	ad ec       	ldi	r26, 0xCD	; 205
 204:	bc ec       	ldi	r27, 0xCC	; 204
 206:	51 d1       	rcall	.+674    	; 0x4aa <__umulhisi3>
 208:	96 95       	lsr	r25
 20a:	87 95       	ror	r24
 20c:	96 95       	lsr	r25
 20e:	87 95       	ror	r24
 210:	96 95       	lsr	r25
 212:	87 95       	ror	r24
 214:	9c 01       	movw	r18, r24
 216:	22 0f       	add	r18, r18
 218:	33 1f       	adc	r19, r19
 21a:	88 0f       	add	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	88 0f       	add	r24, r24
 224:	99 1f       	adc	r25, r25
 226:	82 0f       	add	r24, r18
 228:	93 1f       	adc	r25, r19
 22a:	9a 01       	movw	r18, r20
 22c:	28 1b       	sub	r18, r24
 22e:	39 0b       	sbc	r19, r25
 230:	c9 01       	movw	r24, r18
 232:	80 5d       	subi	r24, 0xD0	; 208
		USART_Transmit('\r');
 234:	52 df       	rcall	.-348    	; 0xda <USART_Transmit>
 236:	8d e0       	ldi	r24, 0x0D	; 13
 238:	50 df       	rcall	.-352    	; 0xda <USART_Transmit>
		USART_Transmit_String("Please Water now its urgent \r\n");
 23a:	8a e0       	ldi	r24, 0x0A	; 10
 23c:	91 e0       	ldi	r25, 0x01	; 1
 23e:	58 cf       	rjmp	.-336    	; 0xf0 <USART_Transmit_String>
 240:	08 95       	ret
	}else if(_humidity < 40){
 242:	88 32       	cpi	r24, 0x28	; 40
 244:	91 05       	cpc	r25, r1
 246:	0c f0       	brlt	.+2      	; 0x24a <waterme+0x86>
 248:	3b c0       	rjmp	.+118    	; 0x2c0 <waterme+0xfc>
		USART_Transmit_String("Time \r\n");
 24a:	82 e0       	ldi	r24, 0x02	; 2
 24c:	91 e0       	ldi	r25, 0x01	; 1
 24e:	50 df       	rcall	.-352    	; 0xf0 <USART_Transmit_String>
 250:	20 91 c2 01 	lds	r18, 0x01C2	; 0x8001c2 <sec>
		USART_Transmit((sec+1)/10+48);
 254:	30 91 c3 01 	lds	r19, 0x01C3	; 0x8001c3 <sec+0x1>
 258:	2f 5f       	subi	r18, 0xFF	; 255
 25a:	3f 4f       	sbci	r19, 0xFF	; 255
 25c:	ad ec       	ldi	r26, 0xCD	; 205
 25e:	bc ec       	ldi	r27, 0xCC	; 204
 260:	24 d1       	rcall	.+584    	; 0x4aa <__umulhisi3>
 262:	96 95       	lsr	r25
 264:	87 95       	ror	r24
 266:	96 95       	lsr	r25
 268:	87 95       	ror	r24
 26a:	96 95       	lsr	r25
 26c:	87 95       	ror	r24
 26e:	80 5d       	subi	r24, 0xD0	; 208
 270:	34 df       	rcall	.-408    	; 0xda <USART_Transmit>
 272:	40 91 c2 01 	lds	r20, 0x01C2	; 0x8001c2 <sec>
		USART_Transmit((sec+1)%10+48);
 276:	50 91 c3 01 	lds	r21, 0x01C3	; 0x8001c3 <sec+0x1>
 27a:	4f 5f       	subi	r20, 0xFF	; 255
 27c:	5f 4f       	sbci	r21, 0xFF	; 255
 27e:	9a 01       	movw	r18, r20
 280:	ad ec       	ldi	r26, 0xCD	; 205
 282:	bc ec       	ldi	r27, 0xCC	; 204
 284:	12 d1       	rcall	.+548    	; 0x4aa <__umulhisi3>
 286:	96 95       	lsr	r25
 288:	87 95       	ror	r24
 28a:	96 95       	lsr	r25
 28c:	87 95       	ror	r24
 28e:	96 95       	lsr	r25
 290:	87 95       	ror	r24
 292:	9c 01       	movw	r18, r24
 294:	22 0f       	add	r18, r18
 296:	33 1f       	adc	r19, r19
 298:	88 0f       	add	r24, r24
 29a:	99 1f       	adc	r25, r25
 29c:	88 0f       	add	r24, r24
 29e:	99 1f       	adc	r25, r25
 2a0:	88 0f       	add	r24, r24
 2a2:	99 1f       	adc	r25, r25
 2a4:	82 0f       	add	r24, r18
 2a6:	93 1f       	adc	r25, r19
 2a8:	9a 01       	movw	r18, r20
 2aa:	28 1b       	sub	r18, r24
 2ac:	39 0b       	sbc	r19, r25
 2ae:	c9 01       	movw	r24, r18
 2b0:	80 5d       	subi	r24, 0xD0	; 208
 2b2:	13 df       	rcall	.-474    	; 0xda <USART_Transmit>
		USART_Transmit('\r');
 2b4:	8d e0       	ldi	r24, 0x0D	; 13
 2b6:	11 df       	rcall	.-478    	; 0xda <USART_Transmit>
		USART_Transmit_String("You should really consider watering \r\n");
 2b8:	89 e2       	ldi	r24, 0x29	; 41
 2ba:	91 e0       	ldi	r25, 0x01	; 1
 2bc:	19 cf       	rjmp	.-462    	; 0xf0 <USART_Transmit_String>
 2be:	08 95       	ret
 2c0:	82 33       	cpi	r24, 0x32	; 50
	}else if(_humidity < 50){
 2c2:	91 05       	cpc	r25, r1
 2c4:	0c f0       	brlt	.+2      	; 0x2c8 <waterme+0x104>
 2c6:	3b c0       	rjmp	.+118    	; 0x33e <waterme+0x17a>
	USART_Transmit_String("Time \r\n");
 2c8:	82 e0       	ldi	r24, 0x02	; 2
 2ca:	91 e0       	ldi	r25, 0x01	; 1
 2cc:	11 df       	rcall	.-478    	; 0xf0 <USART_Transmit_String>
 2ce:	20 91 c2 01 	lds	r18, 0x01C2	; 0x8001c2 <sec>
	USART_Transmit((sec+1)/10+48);
 2d2:	30 91 c3 01 	lds	r19, 0x01C3	; 0x8001c3 <sec+0x1>
 2d6:	2f 5f       	subi	r18, 0xFF	; 255
 2d8:	3f 4f       	sbci	r19, 0xFF	; 255
 2da:	ad ec       	ldi	r26, 0xCD	; 205
 2dc:	bc ec       	ldi	r27, 0xCC	; 204
 2de:	e5 d0       	rcall	.+458    	; 0x4aa <__umulhisi3>
 2e0:	96 95       	lsr	r25
 2e2:	87 95       	ror	r24
 2e4:	96 95       	lsr	r25
 2e6:	87 95       	ror	r24
 2e8:	96 95       	lsr	r25
 2ea:	87 95       	ror	r24
 2ec:	80 5d       	subi	r24, 0xD0	; 208
 2ee:	f5 de       	rcall	.-534    	; 0xda <USART_Transmit>
 2f0:	40 91 c2 01 	lds	r20, 0x01C2	; 0x8001c2 <sec>
	USART_Transmit((sec+1)%10+48);
 2f4:	50 91 c3 01 	lds	r21, 0x01C3	; 0x8001c3 <sec+0x1>
 2f8:	4f 5f       	subi	r20, 0xFF	; 255
 2fa:	5f 4f       	sbci	r21, 0xFF	; 255
 2fc:	9a 01       	movw	r18, r20
 2fe:	ad ec       	ldi	r26, 0xCD	; 205
 300:	bc ec       	ldi	r27, 0xCC	; 204
 302:	d3 d0       	rcall	.+422    	; 0x4aa <__umulhisi3>
 304:	96 95       	lsr	r25
 306:	87 95       	ror	r24
 308:	96 95       	lsr	r25
 30a:	87 95       	ror	r24
 30c:	96 95       	lsr	r25
 30e:	87 95       	ror	r24
 310:	9c 01       	movw	r18, r24
 312:	22 0f       	add	r18, r18
 314:	33 1f       	adc	r19, r19
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	88 0f       	add	r24, r24
 31c:	99 1f       	adc	r25, r25
 31e:	88 0f       	add	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	82 0f       	add	r24, r18
 324:	93 1f       	adc	r25, r19
 326:	9a 01       	movw	r18, r20
 328:	28 1b       	sub	r18, r24
 32a:	39 0b       	sbc	r19, r25
 32c:	c9 01       	movw	r24, r18
 32e:	80 5d       	subi	r24, 0xD0	; 208
	USART_Transmit('\r');
 330:	d4 de       	rcall	.-600    	; 0xda <USART_Transmit>
 332:	8d e0       	ldi	r24, 0x0D	; 13
	USART_Transmit_String("You can consider watering \r\n");
 334:	d2 de       	rcall	.-604    	; 0xda <USART_Transmit>
 336:	80 e5       	ldi	r24, 0x50	; 80
 338:	91 e0       	ldi	r25, 0x01	; 1
 33a:	da ce       	rjmp	.-588    	; 0xf0 <USART_Transmit_String>
 33c:	08 95       	ret
	}else if(_humidity < 60){
 33e:	8c 33       	cpi	r24, 0x3C	; 60
 340:	91 05       	cpc	r25, r1
 342:	0c f0       	brlt	.+2      	; 0x346 <waterme+0x182>
	USART_Transmit_String("Time \r\n");
 344:	3b c0       	rjmp	.+118    	; 0x3bc <waterme+0x1f8>
 346:	82 e0       	ldi	r24, 0x02	; 2
 348:	91 e0       	ldi	r25, 0x01	; 1
 34a:	d2 de       	rcall	.-604    	; 0xf0 <USART_Transmit_String>
	USART_Transmit((sec+1)/10+48);
 34c:	20 91 c2 01 	lds	r18, 0x01C2	; 0x8001c2 <sec>
 350:	30 91 c3 01 	lds	r19, 0x01C3	; 0x8001c3 <sec+0x1>
 354:	2f 5f       	subi	r18, 0xFF	; 255
 356:	3f 4f       	sbci	r19, 0xFF	; 255
 358:	ad ec       	ldi	r26, 0xCD	; 205
 35a:	bc ec       	ldi	r27, 0xCC	; 204
 35c:	a6 d0       	rcall	.+332    	; 0x4aa <__umulhisi3>
 35e:	96 95       	lsr	r25
 360:	87 95       	ror	r24
 362:	96 95       	lsr	r25
 364:	87 95       	ror	r24
 366:	96 95       	lsr	r25
 368:	87 95       	ror	r24
 36a:	80 5d       	subi	r24, 0xD0	; 208
 36c:	b6 de       	rcall	.-660    	; 0xda <USART_Transmit>
 36e:	40 91 c2 01 	lds	r20, 0x01C2	; 0x8001c2 <sec>
	USART_Transmit((sec+1)%10+48);
 372:	50 91 c3 01 	lds	r21, 0x01C3	; 0x8001c3 <sec+0x1>
 376:	4f 5f       	subi	r20, 0xFF	; 255
 378:	5f 4f       	sbci	r21, 0xFF	; 255
 37a:	9a 01       	movw	r18, r20
 37c:	ad ec       	ldi	r26, 0xCD	; 205
 37e:	bc ec       	ldi	r27, 0xCC	; 204
 380:	94 d0       	rcall	.+296    	; 0x4aa <__umulhisi3>
 382:	96 95       	lsr	r25
 384:	87 95       	ror	r24
 386:	96 95       	lsr	r25
 388:	87 95       	ror	r24
 38a:	96 95       	lsr	r25
 38c:	87 95       	ror	r24
 38e:	9c 01       	movw	r18, r24
 390:	22 0f       	add	r18, r18
 392:	33 1f       	adc	r19, r19
 394:	88 0f       	add	r24, r24
 396:	99 1f       	adc	r25, r25
 398:	88 0f       	add	r24, r24
 39a:	99 1f       	adc	r25, r25
 39c:	88 0f       	add	r24, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	82 0f       	add	r24, r18
 3a2:	93 1f       	adc	r25, r19
 3a4:	9a 01       	movw	r18, r20
 3a6:	28 1b       	sub	r18, r24
 3a8:	39 0b       	sbc	r19, r25
 3aa:	c9 01       	movw	r24, r18
	USART_Transmit('\r');
 3ac:	80 5d       	subi	r24, 0xD0	; 208
 3ae:	95 de       	rcall	.-726    	; 0xda <USART_Transmit>
 3b0:	8d e0       	ldi	r24, 0x0D	; 13
	USART_Transmit_String("You can water, but no need \r\n");
 3b2:	93 de       	rcall	.-730    	; 0xda <USART_Transmit>
 3b4:	8d e6       	ldi	r24, 0x6D	; 109
 3b6:	91 e0       	ldi	r25, 0x01	; 1
 3b8:	9b ce       	rjmp	.-714    	; 0xf0 <USART_Transmit_String>
	}else if(_humidity < 70){
 3ba:	08 95       	ret
 3bc:	86 34       	cpi	r24, 0x46	; 70
 3be:	91 05       	cpc	r25, r1
 3c0:	0c f0       	brlt	.+2      	; 0x3c4 <waterme+0x200>
	USART_Transmit_String("Time \r\n");
 3c2:	3a c0       	rjmp	.+116    	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 3c4:	82 e0       	ldi	r24, 0x02	; 2
 3c6:	91 e0       	ldi	r25, 0x01	; 1
	USART_Transmit((sec+1)/10+48);
 3c8:	93 de       	rcall	.-730    	; 0xf0 <USART_Transmit_String>
 3ca:	20 91 c2 01 	lds	r18, 0x01C2	; 0x8001c2 <sec>
 3ce:	30 91 c3 01 	lds	r19, 0x01C3	; 0x8001c3 <sec+0x1>
 3d2:	2f 5f       	subi	r18, 0xFF	; 255
 3d4:	3f 4f       	sbci	r19, 0xFF	; 255
 3d6:	ad ec       	ldi	r26, 0xCD	; 205
 3d8:	bc ec       	ldi	r27, 0xCC	; 204
 3da:	67 d0       	rcall	.+206    	; 0x4aa <__umulhisi3>
 3dc:	96 95       	lsr	r25
 3de:	87 95       	ror	r24
 3e0:	96 95       	lsr	r25
 3e2:	87 95       	ror	r24
 3e4:	96 95       	lsr	r25
 3e6:	87 95       	ror	r24
 3e8:	80 5d       	subi	r24, 0xD0	; 208
 3ea:	77 de       	rcall	.-786    	; 0xda <USART_Transmit>
 3ec:	40 91 c2 01 	lds	r20, 0x01C2	; 0x8001c2 <sec>
	USART_Transmit((sec+1)%10+48);
 3f0:	50 91 c3 01 	lds	r21, 0x01C3	; 0x8001c3 <sec+0x1>
 3f4:	4f 5f       	subi	r20, 0xFF	; 255
 3f6:	5f 4f       	sbci	r21, 0xFF	; 255
 3f8:	9a 01       	movw	r18, r20
 3fa:	ad ec       	ldi	r26, 0xCD	; 205
 3fc:	bc ec       	ldi	r27, 0xCC	; 204
 3fe:	55 d0       	rcall	.+170    	; 0x4aa <__umulhisi3>
 400:	96 95       	lsr	r25
 402:	87 95       	ror	r24
 404:	96 95       	lsr	r25
 406:	87 95       	ror	r24
 408:	96 95       	lsr	r25
 40a:	87 95       	ror	r24
 40c:	9c 01       	movw	r18, r24
 40e:	22 0f       	add	r18, r18
 410:	33 1f       	adc	r19, r19
 412:	88 0f       	add	r24, r24
 414:	99 1f       	adc	r25, r25
 416:	88 0f       	add	r24, r24
 418:	99 1f       	adc	r25, r25
 41a:	88 0f       	add	r24, r24
 41c:	99 1f       	adc	r25, r25
 41e:	82 0f       	add	r24, r18
 420:	93 1f       	adc	r25, r19
 422:	9a 01       	movw	r18, r20
 424:	28 1b       	sub	r18, r24
 426:	39 0b       	sbc	r19, r25
 428:	c9 01       	movw	r24, r18
 42a:	80 5d       	subi	r24, 0xD0	; 208
 42c:	56 de       	rcall	.-852    	; 0xda <USART_Transmit>
	USART_Transmit('\r');
 42e:	8d e0       	ldi	r24, 0x0D	; 13
 430:	54 de       	rcall	.-856    	; 0xda <USART_Transmit>
 432:	8b e8       	ldi	r24, 0x8B	; 139
	USART_Transmit_String("Do not Water ! \r\n");
 434:	91 e0       	ldi	r25, 0x01	; 1
 436:	5c ce       	rjmp	.-840    	; 0xf0 <USART_Transmit_String>
 438:	08 95       	ret

0000043a <main>:
 43a:	8f ef       	ldi	r24, 0xFF	; 255
 43c:	87 bb       	out	0x17, r24	; 23
	

int main(void)
{
	DDRB = 0xFF;
	DDRD = 0x00;
 43e:	11 ba       	out	0x11, r1	; 17
	
	PORTB = 0x01;  //LED 1  on
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	88 bb       	out	0x18, r24	; 24
	USART_Init(MYUBRR);
 444:	87 e6       	ldi	r24, 0x67	; 103
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	3f de       	rcall	.-898    	; 0xc8 <USART_Init>
	Timer_Init();
 44a:	4b de       	rcall	.-874    	; 0xe2 <Timer_Init>
 44c:	80 e8       	ldi	r24, 0x80	; 128
	SREG = 0x80;
 44e:	8f bf       	out	0x3f, r24	; 63
 450:	8d e9       	ldi	r24, 0x9D	; 157
    /* Replace with your application code */
	USART_Transmit_String("Welcome to the Watersystem \r\n");
 452:	91 e0       	ldi	r25, 0x01	; 1
 454:	4d de       	rcall	.-870    	; 0xf0 <USART_Transmit_String>
 456:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <sec>
	int a = 0;
	int humidity = 50;
    while (1) 
    {
		a = sec+1; // actually hour not sec 
 45a:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <sec+0x1>
 45e:	01 96       	adiw	r24, 0x01	; 1
		a = a%10;
 460:	6a e0       	ldi	r22, 0x0A	; 10
 462:	70 e0       	ldi	r23, 0x00	; 0
 464:	0f d0       	rcall	.+30     	; 0x484 <__divmodhi4>
 466:	89 2b       	or	r24, r25
	
		if(a == 0){
 468:	19 f4       	brne	.+6      	; 0x470 <main+0x36>
		 waterme(humidity);
 46a:	82 e3       	ldi	r24, 0x32	; 50
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	aa de       	rcall	.-684    	; 0x1c4 <waterme>
 470:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 472:	8f e0       	ldi	r24, 0x0F	; 15
 474:	97 e2       	ldi	r25, 0x27	; 39
 476:	21 50       	subi	r18, 0x01	; 1
 478:	80 40       	sbci	r24, 0x00	; 0
 47a:	90 40       	sbci	r25, 0x00	; 0
 47c:	e1 f7       	brne	.-8      	; 0x476 <main+0x3c>
 47e:	00 c0       	rjmp	.+0      	; 0x480 <main+0x46>
 480:	00 00       	nop
 482:	e9 cf       	rjmp	.-46     	; 0x456 <main+0x1c>

00000484 <__divmodhi4>:
 484:	97 fb       	bst	r25, 7
 486:	07 2e       	mov	r0, r23
 488:	16 f4       	brtc	.+4      	; 0x48e <__divmodhi4+0xa>
 48a:	00 94       	com	r0
 48c:	06 d0       	rcall	.+12     	; 0x49a <__divmodhi4_neg1>
 48e:	77 fd       	sbrc	r23, 7
 490:	08 d0       	rcall	.+16     	; 0x4a2 <__divmodhi4_neg2>
 492:	1a d0       	rcall	.+52     	; 0x4c8 <__udivmodhi4>
 494:	07 fc       	sbrc	r0, 7
 496:	05 d0       	rcall	.+10     	; 0x4a2 <__divmodhi4_neg2>
 498:	3e f4       	brtc	.+14     	; 0x4a8 <__divmodhi4_exit>

0000049a <__divmodhi4_neg1>:
 49a:	90 95       	com	r25
 49c:	81 95       	neg	r24
 49e:	9f 4f       	sbci	r25, 0xFF	; 255
 4a0:	08 95       	ret

000004a2 <__divmodhi4_neg2>:
 4a2:	70 95       	com	r23
 4a4:	61 95       	neg	r22
 4a6:	7f 4f       	sbci	r23, 0xFF	; 255

000004a8 <__divmodhi4_exit>:
 4a8:	08 95       	ret

000004aa <__umulhisi3>:
 4aa:	a2 9f       	mul	r26, r18
 4ac:	b0 01       	movw	r22, r0
 4ae:	b3 9f       	mul	r27, r19
 4b0:	c0 01       	movw	r24, r0
 4b2:	a3 9f       	mul	r26, r19
 4b4:	70 0d       	add	r23, r0
 4b6:	81 1d       	adc	r24, r1
 4b8:	11 24       	eor	r1, r1
 4ba:	91 1d       	adc	r25, r1
 4bc:	b2 9f       	mul	r27, r18
 4be:	70 0d       	add	r23, r0
 4c0:	81 1d       	adc	r24, r1
 4c2:	11 24       	eor	r1, r1
 4c4:	91 1d       	adc	r25, r1
 4c6:	08 95       	ret

000004c8 <__udivmodhi4>:
 4c8:	aa 1b       	sub	r26, r26
 4ca:	bb 1b       	sub	r27, r27
 4cc:	51 e1       	ldi	r21, 0x11	; 17
 4ce:	07 c0       	rjmp	.+14     	; 0x4de <__udivmodhi4_ep>

000004d0 <__udivmodhi4_loop>:
 4d0:	aa 1f       	adc	r26, r26
 4d2:	bb 1f       	adc	r27, r27
 4d4:	a6 17       	cp	r26, r22
 4d6:	b7 07       	cpc	r27, r23
 4d8:	10 f0       	brcs	.+4      	; 0x4de <__udivmodhi4_ep>
 4da:	a6 1b       	sub	r26, r22
 4dc:	b7 0b       	sbc	r27, r23

000004de <__udivmodhi4_ep>:
 4de:	88 1f       	adc	r24, r24
 4e0:	99 1f       	adc	r25, r25
 4e2:	5a 95       	dec	r21
 4e4:	a9 f7       	brne	.-22     	; 0x4d0 <__udivmodhi4_loop>
 4e6:	80 95       	com	r24
 4e8:	90 95       	com	r25
 4ea:	bc 01       	movw	r22, r24
 4ec:	cd 01       	movw	r24, r26
 4ee:	08 95       	ret

000004f0 <_exit>:
 4f0:	f8 94       	cli

000004f2 <__stop_program>:
 4f2:	ff cf       	rjmp	.-2      	; 0x4f2 <__stop_program>
